{"version":3,"sources":["components/Navbar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeopleFilters.tsx","utils/searchHelper.ts","utils/isIncludes.ts","components/PeoplePage.tsx","utils/normalizePeople.ts","utils/filterPeople.ts","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","classNames","to","HomePage","NotFoundPage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","name","slug","useSearchParams","searchParams","pathname","search","toString","PersonItem","person","sex","born","died","fatherName","motherName","mother","father","peopleSlug","useParams","PeopleTable","people","href","map","PeopleFilters","setSearchParams","setSearchWith","params","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","console","log","Array","isArray","part","append","set","getSearchWith","get","query","centuries","getAll","handleInputSex","ch","event","preventDefault","onClick","e","type","placeholder","onChange","target","century","includes","filter","centuryCurrent","toggleCentery","isIncludes","toLocaleLowerCase","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","getPeople","peopleFromServer","motherPerson","find","fatherPerson","normalizePeople","catch","finally","visiblePeople","sexFilter","queryFilter","length","centuryFilter","Math","floor","filterPeople","App","window","location","hash","replace","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.562910b8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\ntype Props = {\n  name: string,\n  slug: string\n  isActive: boolean,\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, slug, isActive }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': isActive })}\n      to={{\n        pathname: `/people/${slug}`,\n        search: searchParams.toString(),\n      }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const { peopleSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': peopleSlug === slug })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          slug={slug}\n          isActive={sex === 'f'}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink\n            name={mother.name}\n            slug={mother.slug}\n            isActive={mother.sex === 'f'}\n          />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink\n            name={father.name}\n            slug={father.slug}\n            isActive={father.sex === 'f'}\n          />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a href=\"#/people?sort=name\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a href=\"#/people?sort=sex\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a href=\"#/people?sort=born&amp;order=desc\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort-up\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a href=\"#/people?sort=died\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('century') || [];\n\n  const handleInputSex = (\n    ch: string | null, event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n\n    setSearchWith({ sex: ch });\n  };\n\n  const handleInputQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value });\n  };\n\n  const toggleCentery = (century: string) => {\n    const newCenturies = centuries.includes(century)\n      ? centuries.filter(centuryCurrent => centuryCurrent !== century)\n      : [...centuries, century];\n\n    setSearchWith({ century: newCenturies });\n  };\n\n  const handleResetCentry = () => {\n    setSearchWith({ century: null });\n  };\n\n  const handleResetAllFilters = () => {\n    setSearchWith({ sex: null });\n    setSearchWith({ query: null });\n    setSearchWith({ century: null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <a\n          className={classNames({ 'is-active': sex === '' })}\n          href=\"#/\"\n          onClick={(e) => handleInputSex(null, e)}\n        >\n          All\n        </a>\n\n        <a\n          className={classNames({ 'is-active': sex === 'm' })}\n          href=\"#/\"\n          onClick={(e) => handleInputSex('m', e)}\n        >\n          Male\n        </a>\n\n        <a\n          className={classNames({ 'is-active': sex === 'f' })}\n          href=\"#/\"\n          onClick={(e) => handleInputSex('f', e)}\n        >\n          Female\n        </a>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleInputQuery}\n            value={query}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {\n              ['16', '17', '18', '19', '20'].map(century => (\n                <button\n                  key={century}\n                  className={classNames('button mr-1', {\n                    'is-info': centuries.includes(century),\n                  })}\n                  data-cy=\"century\"\n                  onClick={() => toggleCentery(century)}\n                  type=\"button\"\n                >\n                  {century}\n                </button>\n              ))\n            }\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <button\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              onClick={() => handleResetCentry()}\n              type=\"button\"\n            >\n              All\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <button\n          className=\"button is-link is-outlined is-fullwidth\"\n          onClick={() => handleResetAllFilters()}\n          type=\"button\"\n        >\n          Reset all filters\n        </button>\n      </div>\n    </nav>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n        // eslint-disable-next-line no-console\n        console.log(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export const isIncludes = (name: string | null, query: string): boolean => (\n  name !== null && name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n);\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { normalizePeople } from '../utils/normalizePeople';\nimport { PeopleFilters } from './PeopleFilters';\nimport { filterPeople } from '../utils/filterPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(peopleFromServer => setPeople(normalizePeople(peopleFromServer)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const [searchParams] = useSearchParams();\n\n  const visiblePeople = filterPeople(people, searchParams);\n\n  if (isLoading || isError) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {visiblePeople.length ? (\n                <PeopleTable people={visiblePeople} />\n              ) : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                  {/* <p>There are no people matching the current search criteria</p> */}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function normalizePeople(peopleFromServer: Person[]): Person[] {\n  const people = peopleFromServer.map(person => {\n    const motherPerson = peopleFromServer.find(mother => (\n      mother.name === person.motherName));\n\n    const fatherPerson = peopleFromServer.find(father => (\n      father.name === person.fatherName));\n\n    return {\n      ...person,\n      mother: motherPerson,\n      father: fatherPerson,\n    };\n  });\n\n  return people;\n}\n","import { Person } from '../types';\nimport { isIncludes } from './isIncludes';\n\nexport const filterPeople = (\n  people: Person[],\n  searchParams: URLSearchParams,\n): Person[] => {\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('century') || [];\n\n  return (\n    people.filter(person => {\n      const {\n        name,\n        motherName,\n        fatherName,\n        born,\n      } = person;\n\n      const sexFilter = sex !== ''\n        ? person.sex === sex\n        : true;\n\n      const queryFilter = isIncludes(name, query)\n        || isIncludes(motherName, query)\n        || isIncludes(fatherName, query);\n\n      if (!centuries.length) {\n        return sexFilter && queryFilter;\n      }\n\n      const centuryFilter = centuries.includes(\n        Math.floor(born / 100 + 1).toString(),\n      );\n\n      return sexFilter && queryFilter && centuryFilter;\n    })\n  );\n};\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <div className=\"block\">\n\n            {(window.location.hash === ''\n            || window.location.hash === '#/home') && (\n              <Navigate to=\"/\" replace />\n            )}\n\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n\n              <Route path=\"people/:peopleSlug?\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":peopleSlug\" element={<PeoplePage />} />\n              </Route>\n\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}